<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <client_script><![CDATA[function($scope,$compile,spModal) {
  /* widget controller */
  var c = this;
	
	$scope.count = 0;
	
	//Get option values
	c.title = c.options.title || 'Position Map';
	c.glyph = c.options.glyph || '';
	
	console.log('Options');
	console.log(c.options);
	
	//Set value to show loading spinner
	c.data.loading = true;
	
	//After page initially loads re-call server script to load data
	c.server.get({
		action: 'retrieve_data'
	}).then(function(response) {
		
		//Set value to hide loading spinner
		c.data.loading = false;
		
		console.log('Response');
		console.log(response);
		
		//Get data
		c.list = response.data.list;

		//Get unique values
		c.location_list = [];
		c.department_list = [];
		
		c.showNavBar = false;
		
		//Create map, markers, and populate unique lists
		initializeMap();
		
	});
	
	/* off-canvas sidebar toggle */
	$('[data-toggle=offcanvas]').click(function() {
		$('.row-offcanvas-left').toggleClass('active');
		//$('.collapse').toggleClass('in').toggleClass('hidden-xs').toggleClass('visible-xs');
	});
	
	c.checkNav = function() {
		if (c.showNavBar) {
			c.closeNav();
		} else {
			c.openNav();
		}
	}
	
	/* Set the width of the side navigation to 250px */
	c.openNav = function() {
		c.showNavBar = true;
		
		document.getElementById("sidebar").setAttribute("class", "col-xs-3");
		document.getElementById("sidebarContent").setAttribute("class", "sidebarContentOpen");
		document.getElementById("main").setAttribute("class", "col-xs-9");
	}

	/* Set the width of the side navigation to 0 */
	c.closeNav = function() {
		c.showNavBar = false;

		document.getElementById("sidebar").setAttribute("class", "col-xs-1");
		document.getElementById("sidebarContent").setAttribute("class", "sidebarContentClosed");
		setTimeout(function() {
			document.getElementById("main").setAttribute("class", "col-xs-11");
		}, 400);
	}
	
	getInfo = function() {		
		spModal.open({
			title: 'More Information'
		}).then(function(){
    });
	}
	
	sendMessage = function() {
		spModal.open({
			title: 'Notice of Expression'
		}).then(function(){
    });
	}
	
	saveRemovePosition = function(marker_index) {
		
		if ($scope.oms.a[marker_index].pos_saved) {
			console.log('delete');
			document.getElementById($scope.oms.a[marker_index].sys_id).setAttribute("class", "unsaved");
			$scope.oms.a[marker_index].pos_saved = false;
			c.server.get({
				action: 'unsave_position',
				position: $scope.oms.a[marker_index].sys_id
			}).then(function(response) {
				if (response.data.pos_unsaved) {
					$rootScope.$broadcast('saveRemovePosition', response);
				}
			});
		} else {
			console.log('save');
			document.getElementById($scope.oms.a[marker_index].sys_id).setAttribute("class", "saved");
			$scope.oms.a[marker_index].pos_saved = true;
			c.server.get({
				action: 'save_position',
				position: $scope.oms.a[marker_index].sys_id
			}).then(function(response) {
				if (response.data.pos_saved) {
					$rootScope.$broadcast('saveRemovePosition', response);
				}
			});
		}
		
	}
	
	c.filter = function() {

		for (var i=0; i<c.list.length; i++) {
			var marker = $scope.oms.a[i];
			
			//filter locations
			if (c.loaction_select) {
				var locations = c.loaction_select;
				/*
				if (countries.length !== 0) {
					document.getElementById("filterIcon").setAttribute("class", "panel-title filtered");
				} else {
					document.getElementById("filterIcon").setAttribute("class", "panel-title unfiltered");
				}
				*/
				
				// If is same category or category not picked
				if (locations.indexOf(marker.loc_name) != -1 || locations.length === 0) {
					marker.setVisible(true);
				}
				// Categories don't match 
				else {
					marker.setVisible(false);
				}
			}
			
			//filter departments
			if (c.department_select) {
				var departments = c.department_select;
				/*
				if (cities.length !== 0) {
					document.getElementById("filterIcon").setAttribute("class", "panel-title filtered");
				} else {
					document.getElementById("filterIcon").setAttribute("class", "panel-title unfiltered");
				}
				*/
				
				// If is same category or category not picked
				if (departments.indexOf(marker.department_name) != -1 || departments.length === 0) {
					marker.setVisible(true);
				}
				// Categories don't match 
				else {
					marker.setVisible(false);
				}
			}
			
		}
		
		$scope.markerCluster.clearMarkers();
		initializeMapClusters();
		
	}
	
	function initializeMap() {
		
		//Angular App Module and Controller
		//angular.module('mapsApp', [])
		//	.controller('MapCtrl', function ($scope) {

			var mapOptions = {
				zoom: 2, //1: World, 5: Landmass, 10: City, 15: Streets, 20: Buildings
				minZoom: 1,
				center: new google.maps.LatLng(0, 0), //new google.maps.LatLng(40.0000, -98.0000),
				mapTypeId: google.maps.MapTypeId.TERRAIN
			}

			$scope.map = new google.maps.Map(document.getElementById('map'), mapOptions);
		
			//$scope.markers = [];
			$scope.oms = new OverlappingMarkerSpiderfier($scope.map, {
				markersWontMove: true, //default: false
				//markersWontHide: false, //default: false
				//basicFormatEvents: false, //default: false
				keepSpiderfied: true, //default: false
				//ignoreMapClick: false, //default: false
				//nearbyDistance: 20, //default: 20
				circleSpiralSwitchover: 9 //default: 9
				//legWeight: 1.5 //default: 1.5
			});
		
      $scope.oms.addListener('format', function(marker, status) {
				setMarkerLabels(marker, status);
				//var label = status == OverlappingMarkerSpiderfier.markerStatus.SPIDERFIABLE ? '+' : null
        //marker.setLabel(label);
      });

			var createMarker = function (info){
				
				//Store unique countries
				if (c.location_list.indexOf(info.loc_name)===-1) {
					c.location_list.push(info.loc_name);
				}
				//Store unique departments (organizations)
				if (c.department_list.indexOf(info.department_name)===-1) {
					c.department_list.push(info.department_name);
				}

				var marker = new google.maps.Marker({
					map: $scope.map,
					position: new google.maps.LatLng(info.loc_lat, info.loc_long),
					index: $scope.oms.a.length,
					sys_id: info.sys_id,				
					case_num: info.case_num,
					pos: info.pos,
					pos_name: info.pos_name,
					pos_num: info.pos_num,
					pos_saved: info.pos_saved,
					pos_start_date: info.pos_start_date,
					pos_description: info.pos_description,
					//status: open_pos.getValue('status'),
					//status_name: open_pos.getDisplayValue('status'),
					//department:
					department_name: info.department_name,
					//contact:
					contact_name: info.contact_name,
					contact_email: info.contact_email,
					//loc: open_pos.position.u_location.getRefRecord().getValue('sys_id'),
					loc_name: info.loc_name,
					loc_lat: info.loc_lat,
					loc_long: info.loc_long,
					backstop: info.backstop,
					backstop_code: info.backstop_code,
					backstop_desc: info.backstop_desc,
					payplan: info.payplan,
					payplan_code: info.payplan_code,
					payplan_desc: info.payplan_desc,
					paygrade: info.paygrade,
					paygrade_code: info.paygrade_code,
					paygrade_desc: info.paygrade_desc,
					lang: info.lang,
					lang_code: info.lang_code,
					lang_desc: info.lang_desc,
					langscore: info.langscore,
					langscore_code: info.langscore_code,
					langscore_desc: info.langscore_desc,
					priority: info.priority,
					priority_code: info.priority_code,
					priority_desc: info.priority_desc
				});
				
				marker.setVisible(true);
				
				$scope.oms.addMarker(marker);
				
				$scope.infoWindow = new google.maps.InfoWindow();
				
				google.maps.event.addListener(
					marker,
					'spider_click', 
					(function(){
						$scope.infoWindow.setContent(createContent(marker));
						$scope.infoWindow.open($scope.map, marker);
					})
				);
				
				/*
				google.maps.event.addListener(
					marker,
					'click', 
					(function(marker, $scope){
						return function() {
							var marker_content = '<div><div ng-include="\'star-button\'"></div></div>';
							$scope.sys_id = marker.sys_id;
							$scope.marker_index = $scope.oms.a.length-1;
							$scope.win = $scope.infoWindow;
							//$scope.button_id = marker.task_id;
							var compiledContent = $compile(marker_content)($scope);
							$scope.$apply();
							$scope.infoWindow.setContent(compiledContent[0].innerHTML);
							$scope.infoWindow.open($scope.map, marker);
						};
				})(marker, $scope)
				);
				*/

			}

			for (i = 0; i < c.list.length; i++){
				createMarker(c.list[i]);
			}			
		
			$scope.openInfoWindow = function(e, selectedMarker){
				e.preventDefault();
				google.maps.event.trigger(selectedMarker, 'click');
			}
			
			initializeMapClusters();
		
			/*
			$scope.markerCluster.addListener('clusterclick', function(cluster) {
				//do stuff here
			});
			*/
			
		//});
		
	}
	
	function createContent(marker) {
		
		var marker_content = '<div class="scrollFix">' +
			'<p><span class="panel-title">'
		
		if (marker.pos_saved) {
			marker_content += '<span id="'+marker.sys_id+'" type="button" class="saved" onclick="saveRemovePosition('+marker.index+')"><i class="fa fa-star" aria-hidden="true"></i></span>';	
		} else {
			marker_content += '<span id="'+marker.sys_id+'" type="button" class="grey" onclick="saveRemovePosition('+marker.index+')"><i class="fa fa-star" aria-hidden="true"></i></span>';
		}
		
		marker_content += '<span>' + '&nbsp; ' + marker.pos_name + '</span>' +
			'</span></p>';
		
		marker_content += '<div class="row">' +
      '<div class="col-xs-12">' +
				'<p style="border-bottom: 1px solid black;">' +
					'<a href="mailto:'+marker.contact_email+'?subject=Notice of Expression - '+marker.pos_name+'"><i class="fa fa-envelope-o" aria-hidden="true"></i>&nbsp; Express Interest</a>' +
				'</p>' +
				'<div class="row">' +
					'<div class="col-xs-6">' +
						'<span><strong>Contact</strong></span>' +
						'<br><span>'+marker.contact_name+'</span>' +
					'</div>' +
					'<div class="col-xs-6">' +
					'<span><strong>Vacancy</strong></span>' +
						'<br><span>'+marker.pos_start_date+'</span>' +
					'</div>' +
				'</div>' +
			'</div>' +
    '</div>' +
		'<br>' +
    '<div class="row">' +
      '<div class="col-xs-12">' +
				'<p class="divider">' +
					'<a href="#" onclick="getInfo()"><i class="fa fa-info" aria-hidden="true"></i>&nbsp; More Information</a>' +
				'</p>' +
				'<div class="row">' +
					'<div class="col-xs-6">' +
						'<span><strong>Location</strong></span>' +
						'<br><span>'+marker.loc_name+'</span>' +
					'</div>' +
					'<div class="col-xs-6">' +
					'<span><strong>Organization</strong></span>' +
						'<br><span>'+marker.department_name+'</span>' +
					'</div>' +
				'</div>' +
				'<div class="row">' +
					'<div class="col-xs-6">' +
						'<span><strong>Type</strong></span>' +
						'<br><span>'+marker.payplan_code+'</span>' +
					'</div>' +
					'<div class="col-xs-6">' +
					'<span><strong>Grade</strong></span>' +
						'<br><span>'+marker.paygrade_code+'</span>' +
					'</div>' +
				'</div>' +
				'<div class="row">' +
					'<div class="col-xs-6">' +
						'<span><strong>Language</strong></span>' +
						'<br><span>'+marker.lang_code+'</span>' +
					'</div>' +
					'<div class="col-xs-6">' +
					'<span><strong>Criticality</strong></span>' +
						'<br><span>'+marker.priority_code+'</span>' +
					'</div>' +
				'</div>' +
			'</div>' +
    '</div>';
		
		marker_content += '<div>';
		
		return marker_content;
	}
	
	function setMarkerLabels (marker, status) {		
		//var label = status == OverlappingMarkerSpiderfier.markerStatus.SPIDERFIABLE ? '+' : null;
		var label = status == OverlappingMarkerSpiderfier.markerStatus.SPIDERFIABLE ? '+' :
    status == OverlappingMarkerSpiderfier.markerStatus.UNSPIDERFIABLE ? null : null
		marker.setLabel(label);
	}
	
	function initializeMapClusters() {
		var arr = [];
		
		for (i=0; i<$scope.oms.a.length; i++) {
			marker = $scope.oms.a[i];
			
			if (marker.getVisible()) {
				arr.push(marker);
			}
		}
		
		// Add a marker clusterer to manage the markers.
    $scope.markerCluster = new MarkerClusterer($scope.map, arr,
			{
				imagePath: 'https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m'
				//zoomOnClick: true
		});
		
		var minClusterZoom = 14;
		$scope.markerCluster.setMaxZoom(minClusterZoom);
		
	}
		
}]]></client_script>
        <controller_as>c</controller_as>
        <css>#map {
	height:420px;
  width:100%;
}

.saved {
    color: gold;
}

.unsaved {
    color: grey;
}

.filtered {
    color: #428bca;
}

.unfiltered {
    color: grey;
}

.row {
	display: flex
  //height: 100%
}

#sidebar {
	//height: 100%;
  float: left;
	background-color: #eee;
	overflow-x: hidden; /* Disable horizontal scroll */
	transition: 0.4s; /* 0.5 second transition effect to slide in the sidenav */
	min-width:42px;
}

#sidebarContent {
  display: inline;
  //white-space: nowrap;
  //overflow: hidden;
}

.sidebarContentClosed {
  text-align: center;
}

.sidebarContentOpen {
  text-align: left;
}

#main {
  	transition: 0.1s;
}

.divider {
    border-bottom: 1px solid black;
}

.scrollFix {
    line-height: 1.35;
    overflow: hidden;
    white-space: nowrap;
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list>title,glyph</field_list>
        <has_preview>true</has_preview>
        <id>position_map_dv4</id>
        <internal>false</internal>
        <link/>
        <name>Position Map Dv4</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
  /* populate the 'data' object */
  /* e.g., data.table = $sp.getValue('table'); */
	
	//Get user sys_id
	var sys_user = gs.getUserID();
	
	//Do nothing on initial page load
	if (!input) {
		return;
	}
	
	//After page initially loads get data
	if (input && input.action == 'retrieve_data') {
		
		data.list = [];
		var positions = [];
		
		//var query1= 'status=' + status_vacant;
		var open_pos = new GlideRecord('x_107345_asgmt_open_postion_case');
		//open_pos.addEncodedQuery(query1);
		open_pos.query();
		while(open_pos.next()) {
			
			var query2 = 'employee=' + sys_user;
			query2 += '^open_position_case=' + open_pos.getValue('sys_id');
			var saved_pos = new GlideRecord('x_107345_asgmt_employee_saved_positions');
			saved_pos.addEncodedQuery(query2);
			saved_pos.query();
			
			var saved = (saved_pos.hasNext())? true : false;
			
			var department = open_pos.department.getRefRecord();
			var contact = open_pos.contact.getRefRecord();
			var location = open_pos.location.getRefRecord();
			var backstop = open_pos.backstop.getRefRecord();
			var payplan = open_pos.type.getRefRecord();
			var paygrade = open_pos.grade.getRefRecord();
			var language = open_pos.language.getRefRecord();
			var languagescore = open_pos.language_score.getRefRecord();
			var priority = open_pos.position_priority.getRefRecord();
			
			data.list.push({
				sys_id: open_pos.getValue('sys_id'),
				case_num: open_pos.getValue('number'),
				pos: open_pos.getValue('position'),
				pos_name: open_pos.getDisplayValue('position'),
				pos_num: open_pos.getValue('position_number'),
				pos_saved: saved,
				pos_start_date: open_pos.getDisplayValue('vacancy_date'),
				pos_description: open_pos.getDisplayValue('description'),
				department: ((department.getValue('sys_id'))? department.getValue('sys_id') : '' ),
				department_name: ((department.getValue('name'))? department.getValue('name') : ''),
				contact: ((contact.getValue('sys_id'))? contact.getValue('sys_id') : ''),
				contact_name: ((contact.getValue('name'))? contact.getValue('name') : ''),
				contact_email: ((contact.getValue('email'))? contact.getValue('email') : ''),
				loc: ((location.getValue('sys_id'))? location.getValue('sys_id') : ''),
				loc_name: ((location.getValue('name'))? location.getValue('name') : ''),
				loc_lat: ((location.getValue('latitude'))? location.getValue('latitude') : ''),
				loc_long: ((location.getValue('longitude'))? location.getValue('longitude') : ''),
				backstop: ((backstop.getValue('sys_id'))? backstop.getValue('sys_id') : ''),
				backstop_code: ((backstop.getValue('code'))? backstop.getValue('code') : ''),
				backstop_desc: ((backstop.getValue('description'))? backstop.getValue('description') : ''),
				payplan: ((payplan.getValue('sys_id'))? payplan.getValue('sys_id') : ''),
				payplan_code: ((payplan.getValue('code'))? payplan.getValue('code') : ''),
				payplan_desc: ((payplan.getValue('description'))? payplan.getValue('description') : ''),
				paygrade: ((paygrade.getValue('sys_id'))? paygrade.getValue('sys_id') : ''),
				paygrade_code: ((paygrade.getValue('code'))? paygrade.getValue('code') : ''),
				paygrade_desc: ((paygrade.getValue('description'))? paygrade.getValue('description') : ''),
				lang: ((language.getValue('sys_id'))? language.getValue('sys_id') : ''),
				lang_code: ((language.getValue('code'))? language.getValue('code') : ''),
				lang_desc: ((language.getValue('description'))? language.getValue('description') : ''),
				langscore: ((languagescore.getValue('sys_id'))? languagescore.getValue('sys_id') : ''),
				langscore_code: ((languagescore.getValue('code'))? languagescore.getValue('code') : ''),
				langscore_desc: ((languagescore.getValue('description'))? languagescore.getValue('description') : ''),
				priority: ((priority.getValue('sys_id'))? priority.getValue('sys_id') : ''),
				priority_code: ((priority.getValue('code'))? priority.getValue('code') : ''),
				priority_desc: ((priority.getValue('description'))? priority.getValue('description') : '')
			});
		}
		
	}
	
	if (input && input.action == 'save_position') {
		
		var save = new GlideRecord('x_107345_asgmt_employee_saved_positions');
		save.initialize();
		save.employee = sys_user;
		save.open_position_case = input.position;
		save.insert();
		
		data.pos_saved = true;
		
	}
	
	if (input && input.action == 'unsave_position') {
		
		var query3 = 'employee=' + sys_user;
		query3 += '^open_position_case=' + input.position;
		var unsave = new GlideRecord('x_107345_asgmt_employee_saved_positions');
		unsave.addEncodedQuery(query3);
		unsave.deleteMultiple();
		
		data.pos_unsaved = true;
	
	}

})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2017-05-31 17:13:20</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_id>9be72482db4332008a9cf6fdbf961987</sys_id>
        <sys_mod_count>34</sys_mod_count>
        <sys_name>Position Map Dv4</sys_name>
        <sys_package display_value="Asgmt" source="x_107345_asgmt">00e604acdba232008a9cf6fdbf961994</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Asgmt">00e604acdba232008a9cf6fdbf961994</sys_scope>
        <sys_update_name>sp_widget_9be72482db4332008a9cf6fdbf961987</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2017-05-31 20:12:34</sys_updated_on>
        <template><![CDATA[<div class="panel panel-default">
  
	<div class="panel-heading">
		<span class="panel-title"><i class="fa fa-{{c.glyph}}" aria-hidden="true"></i>&nbsp; {{c.title}}</span>
	</div>
  
  <div class="panel-body" ng-if="c.data.loading">
    
    <span><i class="fa fa-spinner fa-spin fa-3x fafw"></i>
      <span class="sr-only">Loading...</span>
    </span>
    
  </div>
  
  <div class="panel-body">
    
      <div class="row">

        <div id="sidebar" class="col-xs-1" ng-if="!c.data.loading">
          <!-- sidebar -->
          <div id="sidebarContent" class="sidebarContentClosed">
            <ul class="nav">
              <li>
                <a href="#" ng-click="c.checkNav()"><i class="fa fa-filter" aria-hidden="true"></i><span ng-if="c.showNavBar">&nbsp; FILTER</span></a>
              </li>
              <li>
                <p class="divider"></p>
              </li>
              <li>
                <i class="fa fa-globe" aria-hidden="true"></i><span ng-if="c.showNavBar">&nbsp; Location</span>
              	<multiselect ng-if="c.showNavBar"  id="location" ng-model="c.loaction_select" options="c.location_list" show-search="true" show-unselect-all="true" ng-change="c.filter()"></multiselect>
            	</li>
              <li>
                <i class="fa fa-building" aria-hidden="true"></i><span ng-if="c.showNavBar">&nbsp; Department</span>
              	<multiselect  ng-if="c.showNavBar" id="department" ng-model="c.department_select" options="c.department_list" show-search="true" show-unselect-all="true" ng-change="c.filter()"></multiselect>
            	</li>
            </ul>
          </div>
          <!-- /sidebar -->
        </div>

        <div id="main" class="col-xs-11">
          <div id="map"></div>
        </div>

      </div>
    
  </div>
    
</div>]]></template>
    </sp_widget>
</record_update>
